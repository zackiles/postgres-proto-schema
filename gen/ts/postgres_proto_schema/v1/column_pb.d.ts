// @generated by protoc-gen-es v2.2.3 with parameter "target=ts+dts+js,import_extension=none,json_types=true,ts_nocheck=true"
// @generated from file postgres_proto_schema/v1/column.proto (package postgres_proto_schema.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Constraint, ConstraintJson, Type, TypeJson } from "./common_pb";

/**
 * Describes the file postgres_proto_schema/v1/column.proto.
 */
export declare const file_postgres_proto_schema_v1_column: GenFile;

/**
 * @generated from message postgres_proto_schema.v1.VarcharOptions
 */
export declare type VarcharOptions = Message<"postgres_proto_schema.v1.VarcharOptions"> & {
  /**
   * @generated from field: int32 length = 1;
   */
  length: number;

  /**
   * @generated from field: string collation = 2;
   */
  collation: string;
};

/**
 * @generated from message postgres_proto_schema.v1.VarcharOptions
 */
export declare type VarcharOptionsJson = {
  /**
   * @generated from field: int32 length = 1;
   */
  length?: number;

  /**
   * @generated from field: string collation = 2;
   */
  collation?: string;
};

/**
 * Describes the message postgres_proto_schema.v1.VarcharOptions.
 * Use `create(VarcharOptionsSchema)` to create a new message.
 */
export declare const VarcharOptionsSchema: GenMessage<VarcharOptions, VarcharOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.CharOptions
 */
export declare type CharOptions = Message<"postgres_proto_schema.v1.CharOptions"> & {
  /**
   * @generated from field: int32 length = 1;
   */
  length: number;

  /**
   * @generated from field: string collation = 2;
   */
  collation: string;
};

/**
 * @generated from message postgres_proto_schema.v1.CharOptions
 */
export declare type CharOptionsJson = {
  /**
   * @generated from field: int32 length = 1;
   */
  length?: number;

  /**
   * @generated from field: string collation = 2;
   */
  collation?: string;
};

/**
 * Describes the message postgres_proto_schema.v1.CharOptions.
 * Use `create(CharOptionsSchema)` to create a new message.
 */
export declare const CharOptionsSchema: GenMessage<CharOptions, CharOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.NumericOptions
 */
export declare type NumericOptions = Message<"postgres_proto_schema.v1.NumericOptions"> & {
  /**
   * @generated from field: int32 precision = 1;
   */
  precision: number;

  /**
   * @generated from field: int32 scale = 2;
   */
  scale: number;
};

/**
 * @generated from message postgres_proto_schema.v1.NumericOptions
 */
export declare type NumericOptionsJson = {
  /**
   * @generated from field: int32 precision = 1;
   */
  precision?: number;

  /**
   * @generated from field: int32 scale = 2;
   */
  scale?: number;
};

/**
 * Describes the message postgres_proto_schema.v1.NumericOptions.
 * Use `create(NumericOptionsSchema)` to create a new message.
 */
export declare const NumericOptionsSchema: GenMessage<NumericOptions, NumericOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.BitOptions
 */
export declare type BitOptions = Message<"postgres_proto_schema.v1.BitOptions"> & {
  /**
   * @generated from field: bool varying = 1;
   */
  varying: boolean;

  /**
   * @generated from field: int32 length = 2;
   */
  length: number;
};

/**
 * @generated from message postgres_proto_schema.v1.BitOptions
 */
export declare type BitOptionsJson = {
  /**
   * @generated from field: bool varying = 1;
   */
  varying?: boolean;

  /**
   * @generated from field: int32 length = 2;
   */
  length?: number;
};

/**
 * Describes the message postgres_proto_schema.v1.BitOptions.
 * Use `create(BitOptionsSchema)` to create a new message.
 */
export declare const BitOptionsSchema: GenMessage<BitOptions, BitOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.TimeOptions
 */
export declare type TimeOptions = Message<"postgres_proto_schema.v1.TimeOptions"> & {
  /**
   * @generated from field: int32 precision = 1;
   */
  precision: number;

  /**
   * @generated from field: bool with_time_zone = 2;
   */
  withTimeZone: boolean;
};

/**
 * @generated from message postgres_proto_schema.v1.TimeOptions
 */
export declare type TimeOptionsJson = {
  /**
   * @generated from field: int32 precision = 1;
   */
  precision?: number;

  /**
   * @generated from field: bool with_time_zone = 2;
   */
  withTimeZone?: boolean;
};

/**
 * Describes the message postgres_proto_schema.v1.TimeOptions.
 * Use `create(TimeOptionsSchema)` to create a new message.
 */
export declare const TimeOptionsSchema: GenMessage<TimeOptions, TimeOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.EnumOptions
 */
export declare type EnumOptions = Message<"postgres_proto_schema.v1.EnumOptions"> & {
  /**
   * @generated from field: repeated string values = 1;
   */
  values: string[];
};

/**
 * @generated from message postgres_proto_schema.v1.EnumOptions
 */
export declare type EnumOptionsJson = {
  /**
   * @generated from field: repeated string values = 1;
   */
  values?: string[];
};

/**
 * Describes the message postgres_proto_schema.v1.EnumOptions.
 * Use `create(EnumOptionsSchema)` to create a new message.
 */
export declare const EnumOptionsSchema: GenMessage<EnumOptions, EnumOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.IntervalOptions
 */
export declare type IntervalOptions = Message<"postgres_proto_schema.v1.IntervalOptions"> & {
  /**
   * @generated from field: string fields = 1;
   */
  fields: string;

  /**
   * @generated from field: int32 precision = 2;
   */
  precision: number;
};

/**
 * @generated from message postgres_proto_schema.v1.IntervalOptions
 */
export declare type IntervalOptionsJson = {
  /**
   * @generated from field: string fields = 1;
   */
  fields?: string;

  /**
   * @generated from field: int32 precision = 2;
   */
  precision?: number;
};

/**
 * Describes the message postgres_proto_schema.v1.IntervalOptions.
 * Use `create(IntervalOptionsSchema)` to create a new message.
 */
export declare const IntervalOptionsSchema: GenMessage<IntervalOptions, IntervalOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.JSONOptions
 */
export declare type JSONOptions = Message<"postgres_proto_schema.v1.JSONOptions"> & {
  /**
   * @generated from field: bool binary = 1;
   */
  binary: boolean;

  /**
   * @generated from field: string validation = 2;
   */
  validation: string;
};

/**
 * @generated from message postgres_proto_schema.v1.JSONOptions
 */
export declare type JSONOptionsJson = {
  /**
   * @generated from field: bool binary = 1;
   */
  binary?: boolean;

  /**
   * @generated from field: string validation = 2;
   */
  validation?: string;
};

/**
 * Describes the message postgres_proto_schema.v1.JSONOptions.
 * Use `create(JSONOptionsSchema)` to create a new message.
 */
export declare const JSONOptionsSchema: GenMessage<JSONOptions, JSONOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.GeometricOptions
 */
export declare type GeometricOptions = Message<"postgres_proto_schema.v1.GeometricOptions"> & {
  /**
   * @generated from field: string srid = 1;
   */
  srid: string;

  /**
   * @generated from field: bool with_z = 2;
   */
  withZ: boolean;

  /**
   * @generated from field: bool with_m = 3;
   */
  withM: boolean;
};

/**
 * @generated from message postgres_proto_schema.v1.GeometricOptions
 */
export declare type GeometricOptionsJson = {
  /**
   * @generated from field: string srid = 1;
   */
  srid?: string;

  /**
   * @generated from field: bool with_z = 2;
   */
  withZ?: boolean;

  /**
   * @generated from field: bool with_m = 3;
   */
  withM?: boolean;
};

/**
 * Describes the message postgres_proto_schema.v1.GeometricOptions.
 * Use `create(GeometricOptionsSchema)` to create a new message.
 */
export declare const GeometricOptionsSchema: GenMessage<GeometricOptions, GeometricOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.NetworkOptions
 */
export declare type NetworkOptions = Message<"postgres_proto_schema.v1.NetworkOptions"> & {
  /**
   * @generated from field: bool family = 1;
   */
  family: boolean;

  /**
   * @generated from field: bool with_prefix = 2;
   */
  withPrefix: boolean;

  /**
   * @generated from field: bool macaddr8 = 3;
   */
  macaddr8: boolean;
};

/**
 * @generated from message postgres_proto_schema.v1.NetworkOptions
 */
export declare type NetworkOptionsJson = {
  /**
   * @generated from field: bool family = 1;
   */
  family?: boolean;

  /**
   * @generated from field: bool with_prefix = 2;
   */
  withPrefix?: boolean;

  /**
   * @generated from field: bool macaddr8 = 3;
   */
  macaddr8?: boolean;
};

/**
 * Describes the message postgres_proto_schema.v1.NetworkOptions.
 * Use `create(NetworkOptionsSchema)` to create a new message.
 */
export declare const NetworkOptionsSchema: GenMessage<NetworkOptions, NetworkOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.UUIDOptions
 */
export declare type UUIDOptions = Message<"postgres_proto_schema.v1.UUIDOptions"> & {
  /**
   * @generated from field: bool is_random = 1;
   */
  isRandom: boolean;
};

/**
 * @generated from message postgres_proto_schema.v1.UUIDOptions
 */
export declare type UUIDOptionsJson = {
  /**
   * @generated from field: bool is_random = 1;
   */
  isRandom?: boolean;
};

/**
 * Describes the message postgres_proto_schema.v1.UUIDOptions.
 * Use `create(UUIDOptionsSchema)` to create a new message.
 */
export declare const UUIDOptionsSchema: GenMessage<UUIDOptions, UUIDOptionsJson>;

/**
 * @generated from message postgres_proto_schema.v1.TSVECTOROptions
 */
export declare type TSVECTOROptions = Message<"postgres_proto_schema.v1.TSVECTOROptions"> & {
  /**
   * @generated from field: string parser = 1;
   */
  parser: string;
};

/**
 * @generated from message postgres_proto_schema.v1.TSVECTOROptions
 */
export declare type TSVECTOROptionsJson = {
  /**
   * @generated from field: string parser = 1;
   */
  parser?: string;
};

/**
 * Describes the message postgres_proto_schema.v1.TSVECTOROptions.
 * Use `create(TSVECTOROptionsSchema)` to create a new message.
 */
export declare const TSVECTOROptionsSchema: GenMessage<TSVECTOROptions, TSVECTOROptionsJson>;

/**
 * Column options
 *
 * @generated from message postgres_proto_schema.v1.ColumnOptions
 */
export declare type ColumnOptions = Message<"postgres_proto_schema.v1.ColumnOptions"> & {
  /**
   * @generated from oneof postgres_proto_schema.v1.ColumnOptions.type_options
   */
  typeOptions: {
    /**
     * @generated from field: postgres_proto_schema.v1.VarcharOptions varchar = 2;
     */
    value: VarcharOptions;
    case: "varchar";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.CharOptions char = 3;
     */
    value: CharOptions;
    case: "char";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.NumericOptions numeric = 4;
     */
    value: NumericOptions;
    case: "numeric";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.BitOptions bit = 5;
     */
    value: BitOptions;
    case: "bit";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.TimeOptions time = 6;
     */
    value: TimeOptions;
    case: "time";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.EnumOptions enum_options = 7;
     */
    value: EnumOptions;
    case: "enumOptions";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.IntervalOptions interval = 8;
     */
    value: IntervalOptions;
    case: "interval";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.JSONOptions json = 9;
     */
    value: JSONOptions;
    case: "json";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.GeometricOptions geometric = 10;
     */
    value: GeometricOptions;
    case: "geometric";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.NetworkOptions network = 11;
     */
    value: NetworkOptions;
    case: "network";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.UUIDOptions uuid = 12;
     */
    value: UUIDOptions;
    case: "uuid";
  } | {
    /**
     * @generated from field: postgres_proto_schema.v1.TSVECTOROptions tsvector = 13;
     */
    value: TSVECTOROptions;
    case: "tsvector";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated postgres_proto_schema.v1.Constraint constraints = 20;
   */
  constraints: Constraint[];

  /**
   * @generated from field: string default_value = 21;
   */
  defaultValue: string;

  /**
   * @generated from field: string collation = 22;
   */
  collation: string;

  /**
   * The base type
   *
   * @generated from field: postgres_proto_schema.v1.Type type = 23;
   */
  type: Type;

  /**
   * Whether this is an array of the base type
   *
   * @generated from field: bool is_array = 24;
   */
  isArray: boolean;
};

/**
 * Column options
 *
 * @generated from message postgres_proto_schema.v1.ColumnOptions
 */
export declare type ColumnOptionsJson = {
  /**
   * @generated from field: postgres_proto_schema.v1.VarcharOptions varchar = 2;
   */
  varchar?: VarcharOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.CharOptions char = 3;
   */
  char?: CharOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.NumericOptions numeric = 4;
   */
  numeric?: NumericOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.BitOptions bit = 5;
   */
  bit?: BitOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.TimeOptions time = 6;
   */
  time?: TimeOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.EnumOptions enum_options = 7;
   */
  enumOptions?: EnumOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.IntervalOptions interval = 8;
   */
  interval?: IntervalOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.JSONOptions json = 9;
   */
  json?: JSONOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.GeometricOptions geometric = 10;
   */
  geometric?: GeometricOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.NetworkOptions network = 11;
   */
  network?: NetworkOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.UUIDOptions uuid = 12;
   */
  uuid?: UUIDOptionsJson;

  /**
   * @generated from field: postgres_proto_schema.v1.TSVECTOROptions tsvector = 13;
   */
  tsvector?: TSVECTOROptionsJson;

  /**
   * @generated from field: repeated postgres_proto_schema.v1.Constraint constraints = 20;
   */
  constraints?: ConstraintJson[];

  /**
   * @generated from field: string default_value = 21;
   */
  defaultValue?: string;

  /**
   * @generated from field: string collation = 22;
   */
  collation?: string;

  /**
   * The base type
   *
   * @generated from field: postgres_proto_schema.v1.Type type = 23;
   */
  type?: TypeJson;

  /**
   * Whether this is an array of the base type
   *
   * @generated from field: bool is_array = 24;
   */
  isArray?: boolean;
};

/**
 * Describes the message postgres_proto_schema.v1.ColumnOptions.
 * Use `create(ColumnOptionsSchema)` to create a new message.
 */
export declare const ColumnOptionsSchema: GenMessage<ColumnOptions, ColumnOptionsJson>;

/**
 * Column definition
 *
 * @generated from message postgres_proto_schema.v1.Column
 */
export declare type Column = Message<"postgres_proto_schema.v1.Column"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: postgres_proto_schema.v1.Type type = 2;
   */
  type: Type;

  /**
   * @generated from field: postgres_proto_schema.v1.ColumnOptions options = 3;
   */
  options?: ColumnOptions;
};

/**
 * Column definition
 *
 * @generated from message postgres_proto_schema.v1.Column
 */
export declare type ColumnJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: postgres_proto_schema.v1.Type type = 2;
   */
  type?: TypeJson;

  /**
   * @generated from field: postgres_proto_schema.v1.ColumnOptions options = 3;
   */
  options?: ColumnOptionsJson;
};

/**
 * Describes the message postgres_proto_schema.v1.Column.
 * Use `create(ColumnSchema)` to create a new message.
 */
export declare const ColumnSchema: GenMessage<Column, ColumnJson>;

