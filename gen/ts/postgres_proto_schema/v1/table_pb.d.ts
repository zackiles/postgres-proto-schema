// @generated by protoc-gen-es v2.2.3 with parameter "target=ts+dts+js,import_extension=none,json_types=true,ts_nocheck=true"
// @generated from file postgres_proto_schema/v1/table.proto (package postgres_proto_schema.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Constraint, ConstraintJson, Platform, PlatformJson } from "./common_pb";
import type { Column, ColumnJson } from "./column_pb";

/**
 * Describes the file postgres_proto_schema/v1/table.proto.
 */
export declare const file_postgres_proto_schema_v1_table: GenFile;

/**
 * Table-specific messages
 *
 * @generated from message postgres_proto_schema.v1.IndexDefinition
 */
export declare type IndexDefinition = Message<"postgres_proto_schema.v1.IndexDefinition"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated string columns = 2;
   */
  columns: string[];

  /**
   * @generated from field: string expression = 3;
   */
  expression: string;

  /**
   * @generated from field: postgres_proto_schema.v1.IndexMethod index_method = 4;
   */
  indexMethod: IndexMethod;

  /**
   * @generated from field: bool unique = 5;
   */
  unique: boolean;

  /**
   * @generated from field: string where_clause = 6;
   */
  whereClause: string;
};

/**
 * Table-specific messages
 *
 * @generated from message postgres_proto_schema.v1.IndexDefinition
 */
export declare type IndexDefinitionJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated string columns = 2;
   */
  columns?: string[];

  /**
   * @generated from field: string expression = 3;
   */
  expression?: string;

  /**
   * @generated from field: postgres_proto_schema.v1.IndexMethod index_method = 4;
   */
  indexMethod?: IndexMethodJson;

  /**
   * @generated from field: bool unique = 5;
   */
  unique?: boolean;

  /**
   * @generated from field: string where_clause = 6;
   */
  whereClause?: string;
};

/**
 * Describes the message postgres_proto_schema.v1.IndexDefinition.
 * Use `create(IndexDefinitionSchema)` to create a new message.
 */
export declare const IndexDefinitionSchema: GenMessage<IndexDefinition, IndexDefinitionJson>;

/**
 * @generated from message postgres_proto_schema.v1.Partitioning
 */
export declare type Partitioning = Message<"postgres_proto_schema.v1.Partitioning"> & {
  /**
   * @generated from field: postgres_proto_schema.v1.PartitionMethod method = 1;
   */
  method: PartitionMethod;

  /**
   * @generated from field: repeated string keys = 2;
   */
  keys: string[];
};

/**
 * @generated from message postgres_proto_schema.v1.Partitioning
 */
export declare type PartitioningJson = {
  /**
   * @generated from field: postgres_proto_schema.v1.PartitionMethod method = 1;
   */
  method?: PartitionMethodJson;

  /**
   * @generated from field: repeated string keys = 2;
   */
  keys?: string[];
};

/**
 * Describes the message postgres_proto_schema.v1.Partitioning.
 * Use `create(PartitioningSchema)` to create a new message.
 */
export declare const PartitioningSchema: GenMessage<Partitioning, PartitioningJson>;

/**
 * @generated from message postgres_proto_schema.v1.RowLevelSecurityPolicy
 */
export declare type RowLevelSecurityPolicy = Message<"postgres_proto_schema.v1.RowLevelSecurityPolicy"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string using_expression = 2;
   */
  usingExpression: string;

  /**
   * @generated from field: string with_check_expression = 3;
   */
  withCheckExpression: string;

  /**
   * @generated from field: string role = 4;
   */
  role: string;
};

/**
 * @generated from message postgres_proto_schema.v1.RowLevelSecurityPolicy
 */
export declare type RowLevelSecurityPolicyJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: string using_expression = 2;
   */
  usingExpression?: string;

  /**
   * @generated from field: string with_check_expression = 3;
   */
  withCheckExpression?: string;

  /**
   * @generated from field: string role = 4;
   */
  role?: string;
};

/**
 * Describes the message postgres_proto_schema.v1.RowLevelSecurityPolicy.
 * Use `create(RowLevelSecurityPolicySchema)` to create a new message.
 */
export declare const RowLevelSecurityPolicySchema: GenMessage<RowLevelSecurityPolicy, RowLevelSecurityPolicyJson>;

/**
 * Patterns for table generation
 *
 * @generated from message postgres_proto_schema.v1.Patterns
 */
export declare type Patterns = Message<"postgres_proto_schema.v1.Patterns"> & {
};

/**
 * Patterns for table generation
 *
 * @generated from message postgres_proto_schema.v1.Patterns
 */
export declare type PatternsJson = {
};

/**
 * Describes the message postgres_proto_schema.v1.Patterns.
 * Use `create(PatternsSchema)` to create a new message.
 */
export declare const PatternsSchema: GenMessage<Patterns, PatternsJson>;

/**
 * @generated from message postgres_proto_schema.v1.Patterns.Timestamps
 */
export declare type Patterns_Timestamps = Message<"postgres_proto_schema.v1.Patterns.Timestamps"> & {
  /**
   * @generated from field: bool track_created = 1;
   */
  trackCreated: boolean;

  /**
   * @generated from field: bool track_updated = 2;
   */
  trackUpdated: boolean;

  /**
   * @generated from field: bool track_deleted = 3;
   */
  trackDeleted: boolean;
};

/**
 * @generated from message postgres_proto_schema.v1.Patterns.Timestamps
 */
export declare type Patterns_TimestampsJson = {
  /**
   * @generated from field: bool track_created = 1;
   */
  trackCreated?: boolean;

  /**
   * @generated from field: bool track_updated = 2;
   */
  trackUpdated?: boolean;

  /**
   * @generated from field: bool track_deleted = 3;
   */
  trackDeleted?: boolean;
};

/**
 * Describes the message postgres_proto_schema.v1.Patterns.Timestamps.
 * Use `create(Patterns_TimestampsSchema)` to create a new message.
 */
export declare const Patterns_TimestampsSchema: GenMessage<Patterns_Timestamps, Patterns_TimestampsJson>;

/**
 * @generated from message postgres_proto_schema.v1.Patterns.Audit
 */
export declare type Patterns_Audit = Message<"postgres_proto_schema.v1.Patterns.Audit"> & {
  /**
   * @generated from field: bool track_creator = 1;
   */
  trackCreator: boolean;

  /**
   * @generated from field: bool track_updater = 2;
   */
  trackUpdater: boolean;

  /**
   * @generated from field: string audit_schema = 3;
   */
  auditSchema: string;
};

/**
 * @generated from message postgres_proto_schema.v1.Patterns.Audit
 */
export declare type Patterns_AuditJson = {
  /**
   * @generated from field: bool track_creator = 1;
   */
  trackCreator?: boolean;

  /**
   * @generated from field: bool track_updater = 2;
   */
  trackUpdater?: boolean;

  /**
   * @generated from field: string audit_schema = 3;
   */
  auditSchema?: string;
};

/**
 * Describes the message postgres_proto_schema.v1.Patterns.Audit.
 * Use `create(Patterns_AuditSchema)` to create a new message.
 */
export declare const Patterns_AuditSchema: GenMessage<Patterns_Audit, Patterns_AuditJson>;

/**
 * Table options
 *
 * @generated from message postgres_proto_schema.v1.TableOptions
 */
export declare type TableOptions = Message<"postgres_proto_schema.v1.TableOptions"> & {
  /**
   * @generated from field: string table_name = 1;
   */
  tableName: string;

  /**
   * @generated from field: string schema = 2;
   */
  schema: string;

  /**
   * @generated from field: string tablespace = 3;
   */
  tablespace: string;

  /**
   * @generated from field: bool is_unlogged = 4;
   */
  isUnlogged: boolean;

  /**
   * @generated from field: bool is_temporary = 5;
   */
  isTemporary: boolean;

  /**
   * @generated from field: repeated postgres_proto_schema.v1.IndexDefinition indexes = 6;
   */
  indexes: IndexDefinition[];

  /**
   * @generated from field: repeated postgres_proto_schema.v1.Constraint table_constraints = 7;
   */
  tableConstraints: Constraint[];

  /**
   * @generated from field: map<string, string> storage_parameters = 8;
   */
  storageParameters: { [key: string]: string };

  /**
   * @generated from field: postgres_proto_schema.v1.Partitioning partitioning = 9;
   */
  partitioning?: Partitioning;

  /**
   * @generated from field: repeated postgres_proto_schema.v1.RowLevelSecurityPolicy rls_policies = 10;
   */
  rlsPolicies: RowLevelSecurityPolicy[];

  /**
   * @generated from field: string collation = 12;
   */
  collation: string;

  /**
   * @generated from field: string storage = 13;
   */
  storage: string;

  /**
   * @generated from field: string compression = 14;
   */
  compression: string;

  /**
   * @generated from field: int32 statistics_target = 15;
   */
  statisticsTarget: number;

  /**
   * @generated from field: postgres_proto_schema.v1.Platform deployment_option = 16;
   */
  deploymentOption: Platform;
};

/**
 * Table options
 *
 * @generated from message postgres_proto_schema.v1.TableOptions
 */
export declare type TableOptionsJson = {
  /**
   * @generated from field: string table_name = 1;
   */
  tableName?: string;

  /**
   * @generated from field: string schema = 2;
   */
  schema?: string;

  /**
   * @generated from field: string tablespace = 3;
   */
  tablespace?: string;

  /**
   * @generated from field: bool is_unlogged = 4;
   */
  isUnlogged?: boolean;

  /**
   * @generated from field: bool is_temporary = 5;
   */
  isTemporary?: boolean;

  /**
   * @generated from field: repeated postgres_proto_schema.v1.IndexDefinition indexes = 6;
   */
  indexes?: IndexDefinitionJson[];

  /**
   * @generated from field: repeated postgres_proto_schema.v1.Constraint table_constraints = 7;
   */
  tableConstraints?: ConstraintJson[];

  /**
   * @generated from field: map<string, string> storage_parameters = 8;
   */
  storageParameters?: { [key: string]: string };

  /**
   * @generated from field: postgres_proto_schema.v1.Partitioning partitioning = 9;
   */
  partitioning?: PartitioningJson;

  /**
   * @generated from field: repeated postgres_proto_schema.v1.RowLevelSecurityPolicy rls_policies = 10;
   */
  rlsPolicies?: RowLevelSecurityPolicyJson[];

  /**
   * @generated from field: string collation = 12;
   */
  collation?: string;

  /**
   * @generated from field: string storage = 13;
   */
  storage?: string;

  /**
   * @generated from field: string compression = 14;
   */
  compression?: string;

  /**
   * @generated from field: int32 statistics_target = 15;
   */
  statisticsTarget?: number;

  /**
   * @generated from field: postgres_proto_schema.v1.Platform deployment_option = 16;
   */
  deploymentOption?: PlatformJson;
};

/**
 * Describes the message postgres_proto_schema.v1.TableOptions.
 * Use `create(TableOptionsSchema)` to create a new message.
 */
export declare const TableOptionsSchema: GenMessage<TableOptions, TableOptionsJson>;

/**
 * Table definition
 *
 * @generated from message postgres_proto_schema.v1.Table
 */
export declare type Table = Message<"postgres_proto_schema.v1.Table"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated postgres_proto_schema.v1.Column columns = 2;
   */
  columns: Column[];
};

/**
 * Table definition
 *
 * @generated from message postgres_proto_schema.v1.Table
 */
export declare type TableJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated postgres_proto_schema.v1.Column columns = 2;
   */
  columns?: ColumnJson[];
};

/**
 * Describes the message postgres_proto_schema.v1.Table.
 * Use `create(TableSchema)` to create a new message.
 */
export declare const TableSchema: GenMessage<Table, TableJson>;

/**
 * Table-specific enums
 *
 * @generated from enum postgres_proto_schema.v1.IndexMethod
 */
export enum IndexMethod {
  /**
   * @generated from enum value: INDEX_METHOD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: INDEX_METHOD_BTREE = 1;
   */
  BTREE = 1,

  /**
   * @generated from enum value: INDEX_METHOD_HASH = 2;
   */
  HASH = 2,

  /**
   * @generated from enum value: INDEX_METHOD_GIST = 3;
   */
  GIST = 3,

  /**
   * @generated from enum value: INDEX_METHOD_SPGIST = 4;
   */
  SPGIST = 4,

  /**
   * @generated from enum value: INDEX_METHOD_GIN = 5;
   */
  GIN = 5,

  /**
   * @generated from enum value: INDEX_METHOD_BRIN = 6;
   */
  BRIN = 6,
}

/**
 * Table-specific enums
 *
 * @generated from enum postgres_proto_schema.v1.IndexMethod
 */
export declare type IndexMethodJson = "INDEX_METHOD_UNSPECIFIED" | "INDEX_METHOD_BTREE" | "INDEX_METHOD_HASH" | "INDEX_METHOD_GIST" | "INDEX_METHOD_SPGIST" | "INDEX_METHOD_GIN" | "INDEX_METHOD_BRIN";

/**
 * Describes the enum postgres_proto_schema.v1.IndexMethod.
 */
export declare const IndexMethodSchema: GenEnum<IndexMethod, IndexMethodJson>;

/**
 * @generated from enum postgres_proto_schema.v1.PartitionMethod
 */
export enum PartitionMethod {
  /**
   * @generated from enum value: PARTITION_METHOD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PARTITION_METHOD_RANGE = 1;
   */
  RANGE = 1,

  /**
   * @generated from enum value: PARTITION_METHOD_HASH = 2;
   */
  HASH = 2,

  /**
   * @generated from enum value: PARTITION_METHOD_LIST = 3;
   */
  LIST = 3,
}

/**
 * @generated from enum postgres_proto_schema.v1.PartitionMethod
 */
export declare type PartitionMethodJson = "PARTITION_METHOD_UNSPECIFIED" | "PARTITION_METHOD_RANGE" | "PARTITION_METHOD_HASH" | "PARTITION_METHOD_LIST";

/**
 * Describes the enum postgres_proto_schema.v1.PartitionMethod.
 */
export declare const PartitionMethodSchema: GenEnum<PartitionMethod, PartitionMethodJson>;

